; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\FIRE.C"
	.assume ADL=1
	SEGMENT BSS
_keepWaterTick:
	DS	1
_firesAlive:
	DS	1
;    1	#include "main.h"
;    2	#include "array.h"
;    3	#include "fire.h"
;    4	#include "tilemap.h"
;    5	#include "sprites.h"
;    6	#include "engine.h"
;    7	#include "graphics.h"
;    8	#include "water.h"
;    9	
;   10	// Array fires;
;   11	
;   12	uint8_t firesAlive;
	SEGMENT CODE
;   13	
;   14	
;   15	void initFire() {
_initFire:
	LD	HL,-16
	CALL	__frameset
;   16	    const unsigned int width = curLevel.width;
	LD	A,(_curLevel+4)
	UEXT	HL
	LD	L,A
	LD	(IX+-9),HL
;   17	    const unsigned int height = curLevel.height;
	LD	A,(_curLevel+5)
	UEXT	HL
	LD	L,A
	LD	(IX+-6),HL
;   18	    unsigned int i;
;   19	    
;   20	    firesAlive = 0;
	XOR	A,A
	LD	(_firesAlive),A
;   21	
;   22	    for(i = 0; i < width * height; i++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_6
L_4:
;   23	        tile_t tile = curLevel.data[i];
	LD	HL,(IX+-3)
	LD	A,7
	CALL	__imul_b
	LD	BC,(_curLevel+6)
	ADD	HL,BC
	LEA	DE,IX+-16
	LD	BC,7
	LDIR	
;   24	
;   25	        if(IS_FIRE(tile))
	LD	A,(IX+-10)
	CP	A,10
	JR	Z,L_3
	LD	A,(IX+-10)
	CP	A,16
	JR	NZ,L_5
L_3:
;   26	            firesAlive++;
	LD	A,(_firesAlive)
	INC	A
	LD	(_firesAlive),A
;   27	    }
L_5:
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_6:
	LD	HL,(IX+-9)
	LD	BC,(IX+-6)
	CALL	__imulu
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_4
;   28	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _initFire ***************************
;Name                         Addr/Register   Size   Type
;_firesAlive                         STATIC      1   variable
;_curLevel                           IMPORT      9   variable
;tile                                 IX-16      7   variable
;width                                 IX-9      3   variable
;height                                IX-6      3   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 22 (bytes)
;       Spill Code: 0 (instruction)


;   29	
;   30	
;   31	void createFire(tile_t *tile) {
_createFire:
	LD	HL,-3
	CALL	__frameset
;   32	    fire_t *f = &tile->data.fire;
;   33	    
;   34	    f->isLit = true;
	LD	IY,(IX+6)
	LD	(IY+0),1
;   35	    f->isPersistent = tile->id == TILE_FIRE_1 ? false : true;
	LD	A,(IY+6)
	CP	A,10
	JR	NZ,L_10
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_11
L_10:
	LD	BC,1
	LD	(IX+-3),BC
L_11:
	LD	A,(IX+-3)
	LD	IY,(IX+6)
	LD	(IY+1),A
;   36	    tile->type = TYPE_FIRE;
	LD	BC,2
	LD	(IY+3),BC
;   37	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _createFire ***************************
;Name                         Addr/Register   Size   Type
;temp8                                 IX-3      3   variable
;tile                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


;   38	
;   39	
;   40	uint8_t putOutFire(tile_t *t, uint8_t x, uint8_t y) {
_putOutFire:
	CALL	__frameset0
;   41	    uint8_t i;
;   42	
;   43	    firesAlive--;
	LD	A,(_firesAlive)
	DEC	A
	LD	(_firesAlive),A
;   44	    dbg_sprintf(dbgerr, "Fire put out: (%d, %d), %d\n", x, y, firesAlive);
;   45	
;   46	    if(t->data.fire.isPersistent) {
	LD	IY,(IX+6)
	LD	A,(IY+1)
	OR	A,A
	JR	Z,L_16
;   47	
;   48	        t->data.fire.isLit = false;
	LD	IY,(IX+6)
	LD	(IY+0),0
;   49	        t->id = TILE_WATER;
	LD	(IY+6),18
;   50	        
;   51	    } else {
	JR	L_18
L_16:
;   52	        // replace current tile with water
;   53	        t->id = TILE_WATER;
	LD	IY,(IX+6)
	LD	(IY+6),18
;   54	        t->flags = t->type = 0;
	LD	BC,0
	LD	(IY+3),BC
	LD	A,(IY+3)
	LD	(IY+2),A
;   55	    }
L_18:
;   56	    
;   57	    
;   58	
;   59	    return firesAlive;
	LD	A,(_firesAlive)
	LD	SP,IX
	POP	IX
	RET	


;**************************** _putOutFire ***************************
;Name                         Addr/Register   Size   Type
;_firesAlive                         STATIC      1   variable
;y                                    IX+12      1   parameter
;x                                     IX+9      1   parameter
;t                                     IX+6      3   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


	XREF _curLevel:ROM
	XREF __imulu:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __imul_b:ROM
	XDEF _putOutFire
	XDEF _createFire
	XDEF _initFire
	XDEF _firesAlive
	END
